{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 48a62cbd0e1aa5c81c75","webpack:///./src/kendo-elasticsearch.js","webpack:///./src/sort.js","webpack:///./src/groups.js","webpack:///./src/aggregations.js","webpack:///./src/es-utils.js","webpack:///./src/data-items.js","webpack:///./src/filters.js","webpack:///./src/fields.js"],"names":["sort","groups","aggregations","filters","esUtils","dataItems","fields","data","kendo","ElasticSearchDataSource","DataSource","extend","init","initOptions","Error","transport","read","url","readTransport","dataType","method","contentType","_model","schema","model","esMapping","kendoFieldsFromESMapping","fill","nestedFields","_nestedFields","_subTypes","console","log","parameterMap","sortParams","prepareParams","group","columns","esParams","skip","from","take","size","aggregationsOnly","kendo2es","query","filtered","filter","innerHits","esMappingKey","_source","Object","keys","k","esNestedPath","esParentType","esChildType","map","esName","aggs","aggregate","JSON","stringify","parse","response","items","fromHits","hits","doc_count","total","aggregates","es2kendo","grps","id","serverFiltering","serverSorting","serverPaging","serverAggregates","serverGrouping","fn","call","fromMapping","_kendo2es","_prepareParams","nestedPath","field","sortItem","esFilterName","order","dir","missing","mode","sortArray","constructor","Array","push","fullSort","forEach","matchingSort","length","splice","indexOf","concat","_es2kendo","previousLevelAggs","previousLevelNestedPath","nextLevelAggs","_kendoGroup2es","nested","path","esFullNestedPath","previousLevelAgg","aggKey","groupAgg","missingAgg","fieldAggregate","groupAggregates","type","esAggName","interval","terms","esGroupAggregates","_parseGroupAggregations","missingNested","groupAggregations","substr","fieldKey","allGroups","groupDefs","_esAgg2kendo","groupAggregation","fillInGroups","key","hasSubgroups","buckets","bucketKey","bucket","missingAggregation","groupsMap","groupKeys","key_as_string","value","count","kendoToESAgg","min","max","sum","average","groupNestedPath","esAggs","aggItem","aggsWrapper","previousPathParts","group_reverse_nested","reverse_nested","split","nestedPathPart","currentPath","join","fullCurrentPath","currentFields","innerHitsFilter","suffixLength","aggType","_innerHits","_innerHitsFilter","subTypes","previousLevelInnerHits","inner_hits","subType","$","logicFilter","or","and","childFilter","not","has_child","has_parent","_fillInGroups","_fromHits","dataItem","fieldValue","Date","i","groupDefValue","groupDefNextValue","_getValuesFromSource","source","pathParts","values","undefined","isArray","valueItem","slice","innerPath","hitSource","hit","_id","esNameSplit","duration","moment","startOf","diff","esMultiSplit","esMultiSeparator","splittedItems","innerHitKey","nestedItems","newSplittedDataItems","splittedItem","nestedItem","mergedItem","_splitMultiValues","results","itemResults","item","partialItemResults","newResult","result","k2","val","kendoFilters","logicalConnective","operator","logic","esFilters","esNestedFilters","esFilter","query_string","_filterParam","analyze_wildcard","esNestedFilter","kendoFilter","subtract","format","add","fieldName","esSearchName","fieldEscaped","_asESParameter","valueEscaped","simpleBinaryOperators","eq","search","lt","lte","gt","gte","esOperator","missingBooleanAsFalse","expression","escapeValueRegexp","escapeSearchValueRegexp","toISOString","replace","match","_fromMapping","_fill","mapping","prefix","esPrefix","properties","property","propertyKey","curedPropertyKey","asKendoPropertyKey","prefixedName","subNestedPath","index","esSearchSubField","esFilterSubField","esAggSubField","hasOwnProperty","esStringSubFields","agg","_result"],"mappings":"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","file":"kendo-elasticsearch.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"kendo-elasticsearch\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"kendo-elasticsearch\"] = factory();\n\telse\n\t\troot[\"kendo-elasticsearch\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 48a62cbd0e1aa5c81c75\n **/","/**\n * A Kendo DataSource that gets its data from ElasticSearch.\n *\n * Read-only, supports paging, filtering, sorting, grouping and aggregations.\n */\n\nimport * as sort from './sort';\nimport * as groups from './groups';\nimport * as aggregations from './aggregations';\nimport * as filters from './filters';\nimport * as esUtils from './es-utils';\nimport * as dataItems from './data-items';\nimport * as fields from './fields';\n\nconst data = kendo.data;\n\ndata.ElasticSearchDataSource = data.DataSource.extend({\n  init(initOptions) {\n    if (!initOptions) {\n      throw new Error('Options are required to use ElasticSearchDataSource');\n    }\n\n    // Prepare the transport to query ES\n    // The only required parameter is transport.read.url\n    if (initOptions.transport && initOptions.transport.read && initOptions.transport.read.url) {\n      const readTransport = initOptions.transport.read;\n      readTransport.dataType = readTransport.dataType || 'json';\n      readTransport.method = readTransport.method || 'POST';\n      readTransport.contentType = readTransport.contentType || 'application/json';\n    } else {\n      throw new Error('transport.read.url must be set to use ElasticSearchDataSource');\n    }\n\n    const _model = initOptions.schema && initOptions.schema.model;\n    if (!_model) {\n      throw new Error('transport.schema.model must be set to use ElasticSearchDataSource');\n    }\n    if (_model.esMapping) {\n      _model.fields = _model.fields || {};\n      data.ElasticSearchDataSource.kendoFieldsFromESMapping(\n        _model.esMapping, _model, _model.fields);\n    } else {\n      if (!_model.fields) {\n        throw new Error('transport.schema.model.fields/esMapping must be set');\n      }\n      fields.fill(_model.fields, _model);\n    }\n\n    // Get sets of nesting levels\n    const [_nestedFields, _subTypes] = fields.nestedFields(_model.fields);\n    console.log(fields);\n\n    // Prepare the content of the query that will be sent to ES\n    // based on the kendo data structure\n    initOptions.transport.parameterMap = function (data) {\n      const sortParams = sort.prepareParams(data.sort, data.group, data.columns);\n\n      const esParams = {};\n      if (data.skip) {\n        esParams.from = data.skip;\n      }\n      if (data.take) {\n        esParams.size = data.take;\n      }\n\n      if (initOptions.aggregationsOnly) {\n        esParams.from = 0;\n        esParams.size = 0;\n      }\n\n      // Transform kendo sort params in a ES sort list\n      esParams.sort = sort.kendo2es(sortParams, _model.fields);\n\n      // Transform kendo filters into a ES query using a query_string request\n      esParams.query = {\n        filtered: {\n          filter: filters.kendo2es(data.filter || [], _model.fields, initOptions)\n        }\n      };\n\n      // Add a top level inner_hits definition for nested/parent/child docs\n      esParams['inner_hits'] = esUtils.innerHits(\n        _nestedFields,\n        _model.esMappingKey,\n        _subTypes,\n        esParams.sort,\n        esParams.query.filtered.filter\n      );\n\n      // Fetch only the required list of fields from ES\n      esParams._source = Object.keys(_model.fields)\n        .filter(k =>\n          !_model.fields[k].esNestedPath &&\n          !_model.fields[k].esParentType &&\n          !_model.fields[k].esChildType)\n        .map(k => _model.fields[k].esName);\n\n      // Transform kendo aggregations into ES aggregations\n      esParams.aggs = aggregations.kendo2es(\n        data.aggregate,\n        _model.fields,\n        _nestedFields,\n        _model.esMappingKey,\n        esParams.query.filtered.filter\n      );\n\n      // Transform Kendo group instruction into an ES bucket aggregation\n      groups.kendo2es(\n        esParams.aggs,\n        data.group,\n        _model.fields,\n        _nestedFields,\n        _model.esMappingKey,\n        esParams.query.filtered.filter\n      );\n\n      return JSON.stringify(esParams);\n    };\n\n    const schema = initOptions.schema;\n\n    // Parse the results from elasticsearch to return data items,\n    // total and aggregates for Kendo grid\n    schema.parse = function (response) {\n      const items = dataItems.fromHits(response.hits.hits, _model.fields);\n\n      // cheat. Root aggregations used as a pseudo buckets with doc_count = total number of results\n      // used to process missing counts\n      if (response.aggregations) {\n        response.aggregations.doc_count = response.hits.total;\n      }\n      const aggregates = aggregations.es2kendo(response.aggregations);\n      const grps = groups.es2kendo(items, response.aggregations, _model.fields, initOptions.aggregationsOnly);\n\n      return {\n        total: response.hits.total,\n        data: items,\n        aggregates: aggregates,\n        groups: grps\n      };\n    };\n\n    schema.aggregates = response => response.aggregates;\n    schema.groups = response => response.groups;\n\n    schema.data = schema.data || 'data';\n    schema.total = schema.total || 'total';\n    schema.model.id = schema.model.id || '_id';\n\n    initOptions.serverFiltering = true;\n    initOptions.serverSorting = true;\n    initOptions.serverPaging = true;\n    initOptions.serverAggregates = true;\n    initOptions.serverGrouping = true;\n\n    data.DataSource.fn.init.call(this, initOptions);\n  }\n});\n\ndata.ElasticSearchDataSource.kendoFieldsFromESMapping = fields.fromMapping;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/kendo-elasticsearch.js\n **/","export const kendo2es = _kendo2es;\nexport const prepareParams = _prepareParams;\n\n// Transform sort instruction into some object suitable for Elasticsearch\n// Also deal with sorting the different nesting levels\nfunction _kendo2es(sort, fields, nestedPath) {\n  return sort.filter(sortItem => {\n    const field = fields[sortItem.field];\n    if (!field) return false;\n    return field.esNestedPath === nestedPath ||\n      field.esParentType === nestedPath ||\n      field.esChildType === nestedPath;\n  }).map(sortItem => {\n    return {\n      [fields[sortItem.field].esFilterName]: {\n        order: sortItem.dir,\n        // Always put items without the sorted key at the end\n        missing: '_last',\n        // Deal with sorting items by a property in nested documents\n        mode: sortItem.dir === 'asc' ? 'min' : 'max'\n      }\n    };\n  });\n};\n\n// Prepare sort parameters for easier transformation to ES later on\nfunction _prepareParams(sort, groups = []) {\n  // first fix the type of the param that can be object of group\n  // we always parse as an array\n  // http://docs.telerik.com/kendo-ui/api/javascript/data/datasource#configuration-sort\n  let sortArray = [];\n  if (sort && sort.constructor === Array) {\n    sortArray = sort;\n  } else {\n    if (sort) {\n      sortArray.push(sort);\n    }\n  }\n\n  // Sort instructions for the groups are first\n  let fullSort = [];\n  groups.forEach(group => {\n    const matchingSort = sortArray.filter(function (sortItem) {\n      return sortItem.field === group.field;\n    });\n    if (matchingSort.length) {\n      fullSort.push(matchingSort[0]);\n      sortArray.splice(sortArray.indexOf(matchingSort[0]), 1);\n    } else {\n      // Sort by default\n      fullSort.push({\n        field: group.field,\n        dir: group.dir || 'asc'\n      });\n    }\n  });\n\n  // Then original sort instructions are added\n  fullSort = fullSort.concat(sortArray);\n\n  return fullSort;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/sort.js\n **/","import * as aggregations from './aggregations';\nimport * as dataItems from './data-items';\nexport const kendo2es = _kendo2es;\nexport const es2kendo = _es2kendo;\n\n// Transform kendo groups declaration into ES bucket aggregations\nfunction _kendo2es(aggs, groups, fields, nestedFields, esMappingKey, filter) {\n  let previousLevelAggs = [aggs];\n  let previousLevelNestedPath = null;\n  groups.forEach(group => {\n    const field = fields[group.field];\n    const nextLevelAggs = _kendoGroup2es(group, fields, nestedFields, esMappingKey, filter);\n\n    const aggs = {};\n    if (field.esNestedPath && field.esNestedPath.indexOf(previousLevelNestedPath) !== 0) {\n      aggs[field.esNestedPath + '_nested'] = aggs[field.esNestedPath + '_nested'] || {\n        nested: {\n          path: field.esFullNestedPath\n        },\n        aggs: {}\n      };\n      aggs[field.esNestedPath + '_nested'].aggs[group.field + '_group'] = nextLevelAggs.group;\n      aggs[field.esNestedPath + '_nested'].aggs[group.field + '_missing'] = nextLevelAggs.missing;\n    } else {\n      aggs[group.field + '_group'] = nextLevelAggs.group;\n      aggs[group.field + '_missing'] = nextLevelAggs.missing;\n    } // 3rd case for nested path that is not child of the previous group\n\n    previousLevelAggs.forEach(previousLevelAgg => {\n      Object.keys(aggs).forEach(aggKey => {\n        previousLevelAgg[aggKey] = aggs[aggKey];\n      });\n    });\n    previousLevelAggs = Object.keys(nextLevelAggs).map(aggKey => {\n      return nextLevelAggs[aggKey].aggregations;\n    });\n    previousLevelNestedPath = field.esNestedPath;\n  });\n}\n\nfunction _kendoGroup2es(group, fields, nestedFields, esMappingKey, filter) {\n  const field = fields[group.field];\n  const groupAgg = {};\n  const missingAgg = {};\n\n  // Look for a aggregate defined on group field\n  // Used to customize the bucket aggregation for range, histograms, etc.\n  let fieldAggregate;\n  const groupAggregates = [];\n  (group.aggregates || []).forEach(aggregate => {\n    // We exclude strings that are not concerned by specific aggregations (only terms buckets)\n    // And cause bugs when counting cardinality on own group.\n    if (aggregate.field === group.field && field.type !== 'string') {\n      fieldAggregate = aggregate;\n    } else {\n      groupAggregates.push(aggregate);\n    }\n  });\n\n  if (fieldAggregate) {\n\n    // We support date histogramms if a 'interval' key is passed\n    // to the group definition\n    groupAgg[fieldAggregate.aggregate] = {\n      field: field.esAggName\n    };\n    if (fieldAggregate.interval) {\n      groupAgg[fieldAggregate.aggregate].interval = fieldAggregate.interval;\n    }\n  } else {\n\n    // Default is a term bucket aggregation\n    // if used on a not analyzed field or subfield\n    // it will create a group for each value of the field\n    groupAgg.terms = {\n      field: field.esAggName,\n      size: 0\n    };\n  }\n\n  missingAgg.missing = {\n    field: field.esAggName\n  };\n\n  const esGroupAggregates = aggregations.kendo2es(\n    groupAggregates,\n    fields,\n    nestedFields,\n    esMappingKey,\n    filter,\n    field.esNestedPath\n  );\n  groupAgg.aggregations = esGroupAggregates;\n  missingAgg.aggregations = esGroupAggregates;\n\n  return {\n    group: groupAgg,\n    missing: missingAgg\n  };\n}\n\n// Extraction aggregations from ES query result that will be used to group\n// data items\nfunction _parseGroupAggregations(aggregations, missingNested) {\n  let groupAggregations = Object.keys(aggregations).filter(aggKey => {\n    return aggKey.substr(aggKey.length - 6) === '_group';\n  }).map(aggKey => {\n    const fieldKey = aggKey.substr(0, aggKey.length - 6);\n    if (missingNested) {\n      aggregations[fieldKey + '_missing'].doc_count += missingNested;\n    }\n    return {\n      group: aggregations[aggKey],\n      missing: aggregations[fieldKey + '_missing'],\n      fieldKey: fieldKey\n    };\n  });\n\n  // extract other group aggregations from nested aggregations\n  Object.keys(aggregations)\n    .filter(aggKey => aggKey.substr(aggKey.length - 7) === '_nested')\n    .forEach(aggKey => {\n      // 'missing' count on a nested group aggregation =\n      //      'document without nested objects' + 'nested objects with missing field'\n      // and 'document without nested objects' is equal to 'number of documents' - 'number of nested documents'\n      const missingNested = aggregations.doc_count - aggregations[aggKey].doc_count;\n      groupAggregations =\n        groupAggregations.concat(_parseGroupAggregations(aggregations[aggKey], missingNested));\n    });\n\n  return groupAggregations;\n}\n\n// Transform ES bucket aggregations into kendo groups of data items\n// See doc here for format of groups:\n// http://docs.telerik.com/KENDO-UI/api/javascript/data/datasource#configuration-schema.groups\nfunction _es2kendo(items, aggregations, fields, aggregationsOnly) {\n  let allGroups = [];\n  if (aggregations) {\n    const groupAggregations = _parseGroupAggregations(aggregations);\n\n    // Find aggregations that are grouping aggregations (ie buckets in ES)\n    groupAggregations.forEach(groupAggregation => {\n      let groups = [];\n\n      const groupDefs = _esAgg2kendo(\n        groupAggregation.group,\n        groupAggregation.missing,\n        groupAggregation.fieldKey);\n\n      if (!aggregationsOnly) {\n        // Then distribute the data items in the groups\n        groups = dataItems.fillInGroups(groupDefs, items, fields[groupAggregation.fieldKey]);\n      } else {\n        groups = groupDefs.keys.map(function (key) {\n          return groupDefs.map[key];\n        });\n      }\n\n      // Case when there is subgroups. Solve it recursively.\n      let hasSubgroups = false;\n      if (groupAggregation.group.buckets && groupAggregation.group.buckets[0]) {\n        Object.keys(groupAggregation.group.buckets[0]).forEach(bucketKey => {\n          if (bucketKey.substr(bucketKey.length - 6) === '_group' ||\n            bucketKey.substr(bucketKey.length - 7) === '_nested') {\n            hasSubgroups = true;\n          }\n        });\n      }\n      groups.forEach(group => {\n        if (hasSubgroups) {\n          group.hasSubgroups = true;\n          group.items = _es2kendo(group.items, group.bucket, fields, aggregationsOnly);\n        }\n        delete group.bucket;\n      });\n\n      allGroups = allGroups.concat(groups);\n    });\n  }\n\n  return allGroups;\n}\n\n// Transform a single bucket aggregation into kendo groups definitions\n// Does not fill up the data items\nfunction _esAgg2kendo(groupAggregation, missingAggregation, fieldKey) {\n  const groupsMap = {};\n  const groupKeys = [];\n\n  // Each bucket in ES aggregation result is a group\n  groupAggregation.buckets.forEach(bucket => {\n    const bucketKey = bucket.key_as_string || bucket.key;\n    groupKeys.push(bucketKey);\n    groupsMap[bucketKey] = {\n      field: fieldKey,\n      value: bucketKey,\n      hasSubgroups: false,\n      aggregates: aggregations.es2kendo(bucket),\n      items: [],\n      bucket: bucket\n    };\n    groupsMap[bucketKey].aggregates[fieldKey] = {\n      count: bucket.doc_count\n    };\n  });\n\n  // Special case for the missing value\n  groupsMap[''] = {\n    field: fieldKey,\n    value: '',\n    hasSubgroups: false,\n    aggregates: aggregations.es2kendo(missingAggregation),\n    items: [],\n    bucket: missingAggregation\n  };\n  groupsMap[''].aggregates[fieldKey] = {\n    count: missingAggregation.doc_count\n  };\n\n  return {\n    map: groupsMap,\n    keys: groupKeys\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/groups.js\n **/","import * as esUtils from './es-utils';\nexport const kendo2es = _kendo2es;\nexport const es2kendo = _es2kendo;\n\nconst kendoToESAgg = {\n  count: 'cardinality',\n  min: 'min',\n  max: 'max',\n  sum: 'sum',\n  average: 'avg'\n};\n\n// Transform kendo aggregates into ES metric aggregations\nfunction _kendo2es(aggregate = [], fields, nestedFields, esMappingKey, filter, groupNestedPath) {\n  const esAggs = {};\n\n  aggregate.forEach(aggItem => {\n    const field = fields[aggItem.field];\n    let nestedPath = field.esNestedPath;\n    let aggsWrapper = esAggs;\n    if (groupNestedPath !== nestedPath) {\n      const previousPathParts = [];\n      if (groupNestedPath && nestedPath.indexOf(groupNestedPath) !== 0) {\n        esAggs.group_reverse_nested = esAggs.group_reverse_nested || {\n          reverse_nested: {},\n          aggregations: {}\n        };\n        aggsWrapper = esAggs.group_reverse_nested.aggregations;\n      } else if (groupNestedPath) {\n        nestedPath = nestedPath.substr(groupNestedPath.length + 1, nestedPath.length);\n      }\n\n      nestedPath.split('.').forEach(nestedPathPart => {\n        previousPathParts.push(nestedPathPart);\n        const currentPath = groupNestedPath ?\n          groupNestedPath + '.' + previousPathParts.join('.') :\n          previousPathParts.join('.');\n        const fullCurrentPath = esMappingKey ? esMappingKey + '.' + currentPath : currentPath;\n        const currentFields = nestedFields[currentPath];\n        if (!currentFields) return;\n        if (!aggsWrapper[currentPath]) {\n          aggsWrapper[currentPath + '_filter_nested'] = aggsWrapper[currentPath + '_filter_nested'] || {\n            nested: {\n              path: fullCurrentPath\n            },\n            aggregations: {}\n          };\n          aggsWrapper[currentPath + '_filter_nested'].aggregations[currentPath + '_filter'] =\n            aggsWrapper[currentPath + '_filter_nested'].aggregations[currentPath + '_filter'] || {\n              filter: esUtils.innerHitsFilter(fullCurrentPath, null, filter),\n              aggregations: {}\n            };\n        }\n        aggsWrapper = aggsWrapper[currentPath + '_filter_nested'].aggregations[currentPath + '_filter'].aggregations;\n      });\n    }\n\n    aggsWrapper[aggItem.field + '_' + aggItem.aggregate] = {};\n    aggsWrapper[aggItem.field + '_' + aggItem.aggregate][kendoToESAgg[aggItem.aggregate]] = {\n      field: field.esAggName\n    };\n  });\n\n  return esAggs;\n}\n\n// Transform aggregation results from a ES query to kendo aggregates\nfunction _es2kendo(aggregations = {}, aggregates = {}) {\n  Object.keys(aggregations).forEach(aggKey => {\n    if (!aggregations[aggKey]) return;\n    ['count', 'min', 'max', 'average', 'sum'].forEach(aggType => {\n      const suffixLength = aggType.length + 1;\n      if (aggKey.substr(aggKey.length - suffixLength) === '_' + aggType) {\n        const fieldKey = aggKey.substr(0, aggKey.length - suffixLength);\n        aggregates[fieldKey] = aggregates[fieldKey] || {};\n        aggregates[fieldKey][aggType] = aggregations[aggKey].value;\n      }\n    });\n\n    if (aggKey.substr(aggKey.length - 7) === '_nested' || aggKey.substr(aggKey.length - 7) === '_filter') {\n      // recursivity on intermediate levels\n      _es2kendo(aggregations[aggKey], aggregates);\n    }\n\n  });\n  return aggregates;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/aggregations.js\n **/","// Some function that work on ES queries to deal with nested levels and other\n// difficulties\n\nexport const innerHits = _innerHits;\nexport const innerHitsFilter = _innerHitsFilter;\n\n// Get a root inner_hits definition to fetch all nested/parent/child docs\nfunction _innerHits(nestedFields, esMappingKey, subTypes, sort, filter) {\n  const innerHits = {};\n  Object.keys(nestedFields).forEach(nestedPath => {\n    let previousLevelInnerHits = innerHits;\n    const previousPathParts = [];\n    nestedPath.split('.').forEach(nestedPathPart => {\n      previousPathParts.push(nestedPathPart);\n      const currentPath = previousPathParts.join('.');\n      const fullCurrentPath = esMappingKey ? esMappingKey + '.' + currentPath : currentPath;\n      const currentFields = nestedFields[currentPath];\n      if (!currentFields) {\n        return;\n      }\n      if (!previousLevelInnerHits[currentPath]) {\n        previousLevelInnerHits[currentPath] = {\n          path: {\n            [fullCurrentPath]: {\n              _source: currentFields,\n              size: 10000,\n              sort: sort,\n              query: {\n                filtered: {\n                  filter: _innerHitsFilter(fullCurrentPath, null, filter)\n                }\n              }\n            }\n          }\n        };\n      }\n      if (currentPath !== nestedPath) {\n        previousLevelInnerHits[currentPath].path[fullCurrentPath].inner_hits =\n          previousLevelInnerHits[currentPath].path[fullCurrentPath].inner_hits || {};\n        previousLevelInnerHits =\n          previousLevelInnerHits[currentPath].path[fullCurrentPath].inner_hits;\n      }\n    });\n  });\n\n  Object.keys(subTypes).forEach(subType => {\n    const currentFields = subTypes[subType];\n    innerHits[subType] = {\n      type: {\n        [subType]: {\n          _source: currentFields,\n          size: 10000,\n          sort: sort,\n          query: {\n            filtered: {\n              filter: _innerHitsFilter(null, subType, filter)\n            }\n          }\n        }\n      }\n    };\n  });\n  return innerHits;\n}\n\n// Traverse the filter to keep only the parts that concern\n// a nesting path\nfunction _innerHitsFilter(nestedPath, subType, filter) {\n  filter = $.extend(true, {}, filter);\n  const logicFilter = filter.or || filter.and;\n  if (logicFilter) {\n    logicFilter.filters = logicFilter.filters.filter(childFilter => {\n      return childFilter.and || childFilter.or ||\n        (childFilter.nested && childFilter.nested.path === nestedPath) ||\n        (childFilter.not && childFilter.not.nested && childFilter.not.nested.path === nestedPath) ||\n        (childFilter.has_child && childFilter.has_child.type === subType) ||\n        (childFilter.not && childFilter.not.has_child && childFilter.not.has_child.type === subType) ||\n        (childFilter.has_parent && childFilter.has_parent.type === subType) ||\n        (childFilter.not && childFilter.not.has_parent && childFilter.not.has_parent.type === subType);\n    }).map(childFilter => {\n      if (childFilter.nested) {\n        return childFilter.nested.filter;\n      } else if (childFilter.not && childFilter.not.nested) {\n        return {\n          not: childFilter.not.nested.filter\n        };\n      } else if (childFilter.has_child) {\n        return childFilter.has_child.filter;\n      } else if (childFilter.not && childFilter.not.has_child) {\n        return {\n          not: childFilter.not.has_child.filter\n        };\n      } else if (childFilter.has_parent) {\n        return childFilter.has_parent.filter;\n      } else if (childFilter.not && childFilter.not.has_parent) {\n        return {\n          not: childFilter.not.has_parent.filter\n        };\n      } else {\n        return _innerHitsFilter(nestedPath, childFilter);\n      }\n    });\n  }\n  return filter;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/es-utils.js\n **/","export const fillInGroups = _fillInGroups;\nexport const fromHits = _fromHits;\n\n// distribute data items in groups based on a field value\nfunction _fillInGroups(groupDefs, dataItems, field) {\n  const groups = [];\n  dataItems.forEach(function (dataItem) {\n    let group = groupDefs.map[dataItem[field.key] || ''];\n\n    // If no exact match, then we may be in some range aggregation ?\n    if (!group) {\n      const fieldValue = field.type === 'date' ? new Date(dataItem[field.key]) : dataItem[field.key];\n\n      for (let i = 0; i < groupDefs.keys.length; i++) {\n        const groupDefValue = field.type === 'date' ? new Date(groupDefs.keys[i]) : groupDefs.keys[i];\n        if (fieldValue >= groupDefValue) {\n          const groupDefNextValue = groupDefs.keys[i + 1] && (field.type === 'date' ?\n            new Date(groupDefs.keys[i + 1]) : groupDefs.keys[i + 1]);\n          if (!groupDefNextValue || fieldValue < groupDefNextValue) {\n            group = groupDefs.map[groupDefs.keys[i]];\n          }\n        }\n      }\n    }\n\n    if (!group) {\n      throw new Error('No group found, val: ' + dataItem[field.key] + ' field: ' + field.key);\n    }\n    group.items.push(dataItem);\n    if (group.items.length === 1) {\n      groups.push(group);\n    }\n  });\n  return groups;\n}\n\n// Mimic fetching values from _source as the 'fields' functionality\n// would have done it.\n// We do not use the native 'fields' due to this bug:\n// https://github.com/elastic/elasticsearch/issues/14475\nfunction _getValuesFromSource(source, pathParts) {\n  let values = [];\n  const value = source[pathParts[0]];\n  if (value === undefined) {\n    return [];\n  }\n\n  if (pathParts.length > 1) {\n\n    // recursivity is not over, there remain some path parts\n    if ($.isArray(value)) {\n      value.forEach(function (valueItem) {\n        values = values.concat(_getValuesFromSource(valueItem, pathParts.slice(1)));\n      });\n    } else {\n      values = _getValuesFromSource(value, pathParts.slice(1));\n    }\n  } else {\n\n    // recursivity, we should be in a leaf value\n    if ($.isArray(value)) {\n      values = value;\n    } else {\n      values = [value];\n    }\n  }\n  return values;\n}\n\n// Transform hits from the ES query in to data items for kendo grid\n// The difficulty is that hits can contain inner hits and that some\n// fields can be multi-valued\nfunction _fromHits(hits, fields, innerPath) {\n\n  let dataItems = [];\n  hits.forEach(hit => {\n    const hitSource = hit._source || {};\n    const dataItem = {};\n\n    dataItem.id = [hit._id];\n    Object.keys(fields).filter(fieldKey => {\n      const field = fields[fieldKey];\n\n      // Keep only the fields that are part of this nested/parent/child\n      if (innerPath === undefined) {\n        return !(field.esNestedPath || field.esChildType || field.esParentType);\n      } else {\n        return field.esNestedPath === innerPath ||\n          field.esChildType === innerPath ||\n          field.esParentType === innerPath;\n      }\n    }).forEach(function (fieldKey) {\n      const field = fields[fieldKey];\n      let values = _getValuesFromSource(hitSource, field.esNameSplit);\n\n      // special case field that is a date deep down by displayed as a number\n      if (field.duration) {\n        if (!moment) {\n          throw new Error('Working on durations requires to load momentjs library');\n        }\n      }\n\n      if (field.duration === 'beforeToday') {\n        values = values.map(value => {\n          return moment().startOf('day').diff(moment(value).startOf('day'), 'days');\n        });\n      }\n\n      if (field.duration === 'afterToday') {\n        values = values.map(value => {\n          return moment(value).startOf('day').diff(moment().startOf('day'), 'days');\n        });\n      }\n\n      if (values) {\n        if (field.esMultiSplit) {\n          if (values && values.length) {\n            dataItem[fieldKey] = values;\n          } else {\n            dataItem[fieldKey] = [null];\n          }\n        } else {\n          dataItem[fieldKey] = values.join(field.esMultiSeparator || '\\n');\n        }\n      }\n    });\n\n    // Multiply and fill items based on nesting levels\n    let splittedItems = [dataItem];\n    Object.keys(hit.inner_hits || {}).forEach(function (innerHitKey) {\n      const nestedItems =\n        _fromHits(hit.inner_hits[innerHitKey].hits.hits, fields, innerHitKey);\n      const newSplittedDataItems = [];\n      splittedItems.forEach(function (splittedItem) {\n        if (nestedItems.length) {\n          nestedItems.forEach(function (nestedItem) {\n            const mergedItem = {};\n            Object.keys(nestedItem).forEach(function (key) {\n              mergedItem[key] = nestedItem[key];\n            });\n            Object.keys(splittedItem).forEach(function (key) {\n              mergedItem[key] = splittedItem[key];\n            });\n            newSplittedDataItems.push(mergedItem);\n          });\n        } else {\n          newSplittedDataItems.push(splittedItem);\n        }\n      });\n      splittedItems = newSplittedDataItems;\n    });\n\n    dataItems = dataItems.concat(splittedItems);\n\n  });\n  return _splitMultiValues(dataItems);\n}\n\n// Split lines of data items based on their optionally multipl items\n// Example: [{a:[1,2],b:[3]}] -> [{a:1,b:3},{a:2,b:3}]\nfunction _splitMultiValues(items) {\n  let results = [];\n\n  // Iterates on items in the array and multiply based on multiple values\n  items.forEach(item => {\n    let itemResults = [{}];\n\n    // Iterate on properties of item\n    Object.keys(item).forEach(k => {\n      const partialItemResults = [];\n\n      // Iterate on the multiple values of this property\n      if (item[k] && item[k].constructor === Array) {\n        item[k].forEach(val => {\n          itemResults.forEach(result => {\n\n            // Clone the result to create variants with the different values of current key\n            const newResult = {};\n            Object.keys(result).forEach(k2 => newResult[k2] = result[k2]);\n            newResult[k] = val;\n            partialItemResults.push(newResult);\n          });\n        });\n      } else {\n        itemResults.forEach(result => {\n          result[k] = item[k];\n          partialItemResults.push(result);\n        });\n      }\n      itemResults = partialItemResults;\n    });\n\n    results = results.concat(itemResults);\n  });\n  return results;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/data-items.js\n **/","export const kendo2es = _kendo2es;\n\n// Transform a tree of kendo filters into a tree of ElasticSearch filters\nfunction _kendo2es(kendoFilters, fields, initOptions) {\n  let filters;\n\n  // logicalConnective can be \"and\" or \"or\"\n  let logicalConnective = 'and';\n\n  if (kendoFilters.operator) {\n    filters = [kendoFilters];\n  } else if (kendoFilters.logic) {\n    logicalConnective = kendoFilters.logic;\n    filters = kendoFilters.filters || [];\n  } else if (kendoFilters.constructor === Array) {\n    filters = kendoFilters;\n  } else {\n    throw new Error('Unsupported filter object: ' + kendoFilters);\n  }\n\n  const esFilters = [];\n  const esNestedFilters = {};\n\n  filters.forEach(filter => {\n    if (filter.logic) {\n      esFilters.push(_kendo2es(filter, fields));\n    } else {\n      const field = fields[filter.field];\n      if (!field) {\n        throw new Error('Unknown field in filter: ' + filter.field);\n      }\n      let esFilter = {\n        query: {\n          query_string: {\n            query: _filterParam(filter, fields, initOptions),\n            // support uppercase/lowercase and accents\n            analyze_wildcard: true\n          }\n        }\n      };\n      if (field.esNestedPath) {\n        const esNestedFilter = esNestedFilters[field.esNestedPath] || {\n          nested: {\n            path: field.esFullNestedPath,\n            filter: {}\n          }\n        };\n        esNestedFilter.nested.filter[logicalConnective] = esNestedFilter.nested.filter[logicalConnective] || {\n          filters: []\n        };\n        esNestedFilter.nested.filter[logicalConnective].filters.push(esFilter);\n        if (!esNestedFilters[field.esNestedPath]) {\n          esFilter = esNestedFilters[field.esNestedPath] = esNestedFilter;\n        } else {\n          esFilter = null;\n        }\n      } else if (field.esParentType) {\n        esFilter = {\n          has_parent: {\n            type: field.esParentType,\n            filter: esFilter\n          }\n        };\n      } else if (field.esChildType) {\n        esFilter = {\n          has_child: {\n            type: field.esChildType,\n            filter: esFilter\n          }\n        };\n      }\n\n      if (esFilter) {\n        esFilters.push(esFilter);\n      }\n\n    }\n  });\n\n  const result = {};\n  result[logicalConnective] = {\n    filters: esFilters\n  };\n  return result;\n}\n\n// Transform a single kendo filter in a string\n// that can be used to compose a ES query_string query\nfunction _filterParam(kendoFilter, fields, initOptions) {\n\n  // Boolean filter seems to forget the operator sometimes\n  kendoFilter.operator = kendoFilter.operator || 'eq';\n\n  // Use the filter field name except for contains\n  // that should use classical search instead of regexp\n  const field = fields[kendoFilter.field];\n\n  // special case field that is a date deep down by displayed as a number\n  if (field.duration) {\n    if (!moment) {\n      throw new Error('Working on durations requires to load momentjs library');\n    }\n  }\n\n  if (field.duration === 'beforeToday') {\n    kendoFilter.value = moment().startOf('day').subtract(kendoFilter.value, 'days').format();\n    if (kendoFilter.operator === 'lt') kendoFilter.operator = 'gt';\n    else if (kendoFilter.operator === 'lte') kendoFilter.operator = 'gte';\n    else if (kendoFilter.operator === 'gt') kendoFilter.operator = 'lt';\n    else if (kendoFilter.operator === 'gte') kendoFilter.operator = 'lte';\n  }\n\n  if (field.duration === 'afterToday') {\n    kendoFilter.value = moment().startOf('day').add(kendoFilter.value, 'days').format();\n  }\n\n  let fieldName;\n  if (kendoFilter.operator === 'search') {\n    fieldName = field.esSearchName;\n  } else {\n    fieldName = field.esFilterName;\n  }\n\n  const fieldEscaped = _asESParameter(fieldName);\n  const valueEscaped = _asESParameter(kendoFilter.value, kendoFilter.operator);\n\n  const simpleBinaryOperators = {\n    eq: '',\n    search: '',\n    lt: '<',\n    lte: '<=',\n    gt: '>',\n    gte: '>='\n  };\n\n  if (simpleBinaryOperators[kendoFilter.operator] !== void 0) {\n    const esOperator = simpleBinaryOperators[kendoFilter.operator];\n    // Optional special condition, when comparing against bool false values\n    // we treat also the missing property condition, like this, false === missing too\n    // Event if this is not true, normally is the desired effect\n    if (initOptions && initOptions.missingBooleanAsFalse === true && kendoFilter.value === false) {\n      return (fieldEscaped + ':' + esOperator + valueEscaped) + ' OR _missing_:' + fieldEscaped;\n    } else {\n      return fieldEscaped + ':' + esOperator + valueEscaped;\n    }\n  } else {\n    let expression;\n    switch (kendoFilter.operator) {\n      case 'neq':\n        return 'NOT (' + fieldEscaped + ':' + valueEscaped + ')';\n      case 'contains':\n        return '(' + fieldEscaped + ':*' + valueEscaped + '*)';\n      case 'doesnotcontain':\n        return 'NOT (' + fieldEscaped + ':*' + valueEscaped + '*)';\n      case 'startswith':\n        return fieldEscaped + ':' + valueEscaped + '*';\n      case 'endswith':\n        return fieldEscaped + ':*' + valueEscaped;\n      case 'missing':\n        if (field.esNestedPath || field.esParentType || field.esChildType) {\n          // missing in a nested document should be implemented as a \"not nested exists\"\n          // but this is not really doable when mixing with other filters\n          // see https://github.com/elastic/elasticsearch/issues/3495\n          throw new Error('missing filter is not supported on nested fields');\n        }\n        expression = '_missing_:' + fieldEscaped;\n        if (field.type === 'string') {\n          expression += ' OR (' + fieldEscaped + ':\"\")';\n        }\n        return expression;\n      case 'exists':\n        expression = '_exists_:' + fieldEscaped;\n        if (field.type === 'string') {\n          expression += ' AND NOT(' + fieldEscaped + ':\"\")';\n        }\n        return expression;\n      default:\n        throw new Error('Unsupported Kendo filter operator: ' + kendoFilter.operator);\n    }\n  }\n}\n\n// Escape values so that they are suitable as an elasticsearch query_string query parameter\nconst escapeValueRegexp = /[+\\-&|!()\\{}\\[\\]^:\"~*?:\\/ ]/g;\nconst escapeSearchValueRegexp = /[+\\-&|!()\\{}\\[\\]^:~:\\/]/g;\n\nfunction _asESParameter(value, operator) {\n  if (value.constructor === Date) {\n    value = value.toISOString();\n  } else if (typeof value === 'boolean' || typeof value === 'number') {\n    value = '' + value;\n  }\n\n  // For the special 'search' operator we allow some wildcard and other characters\n  if (operator === 'search') {\n    value = value.replace('\\\\', '\\\\\\\\');\n    if (((value.match(/\"/g) || []).length % 2) === 1) {\n      value = value.replace(/\"/g, '\\\\\"');\n    }\n    value = value.replace(escapeSearchValueRegexp, '\\\\$&');\n    return value;\n  }\n  return value.replace('\\\\', '\\\\\\\\').replace(escapeValueRegexp, '\\\\$&');\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/filters.js\n **/","export const fromMapping = _fromMapping;\nexport const fill = _fill;\nexport const nestedFields = _nestedFields;\n\n// Transform a mapping definition from ElasticSearch into a kendo fields map\n// This utility function is exposed as it can be interesting to use it before instantiating\n// the actual datasource\n// @param mapping - An elasticsearch mapping\nfunction _fromMapping(\n  mapping, model, fields = {}, prefix = '', esPrefix, nestedPath) {\n  Object.keys(mapping.properties || {}).forEach(propertyKey => {\n    const property = mapping.properties[propertyKey];\n    const curedPropertyKey = asKendoPropertyKey(propertyKey);\n    const prefixedName = prefix ? prefix + '_' + curedPropertyKey : curedPropertyKey;\n    const esName = esPrefix ? esPrefix + '.' + propertyKey : propertyKey;\n\n    if (property.type === 'nested') {\n      // Case where the property is a nested object\n      const subNestedPath = nestedPath ? nestedPath + '.' + esName : esName;\n      _fromMapping(property, model, fields, prefixedName, '', subNestedPath);\n    } else if (property.properties) {\n      // Case where the property is a non nested object with properties\n      _fromMapping(property, model, fields, prefixedName, esName, nestedPath);\n    } else if (property.type === 'object') {\n      // Case where the property is a non nested object with zero subproperties. do nothing.\n    } else {\n      // Finally case of a leaf property\n      const field = fields[prefixedName] = fields[prefixedName] || {};\n\n      // if the field was already defined with a nested path,\n      // then we are in the case of field both nested and included in parent\n      // then we should not consider it as a real leaf property\n      if (!field.esNestedPath) {\n        field.type = field.type || property.type;\n\n        // ES supports a variety of numeric types. In JSON and kendo it is simply 'number'.\n        if (['float', 'double', 'integer', 'long', 'short', 'byte'].indexOf(field.type) !== -1) {\n          field.type = 'number';\n        }\n\n        // Default is splitting data lines except for string fields\n        if (field.type !== 'string') {\n          field.esMultiSplit = true;\n        }\n\n        if (nestedPath) {\n          field.esNestedPath = nestedPath;\n        }\n        field.esName = esName;\n\n        // When the field is not analyzed, the default string subfields should not be applied.\n        if (property.index === 'not_analyzed') {\n          field.esSearchSubField = null;\n          field.esFilterSubField = null;\n          field.esAggSubField = null;\n        }\n      }\n    }\n  });\n\n  _fill(fields, model);\n\n  return fields;\n};\n\n// Associate Kendo field names to ElasticSearch field names.\n// We have to allow ElasticSearch field names to be different\n// because ES likes an \"@\" and/or dots in field names while Kendo fails on that.\n// Filtering and aggregating can be based on a a different field if esFilterName\n// or esAggName are defined or on a subfield if esFilterSubField or esAggSubField are defined.\n// Typical use case is the main field is analyzed, but it has a subfield that is not\n// (or only with a minimal analyzer)\nfunction _fill(fields, model = {}) {\n  for (const k in fields) {\n    if (fields.hasOwnProperty(k)) {\n      const field = fields[k];\n      field.key = k;\n      field.esName = field.esName || k;\n      field.esNameSplit = field.esName.split('.');\n      if (field.esNestedPath) {\n        field.esFullNestedPath = field.esNestedPath;\n        if (model.esMappingKey) {\n          field.esFullNestedPath = model.esMappingKey + '.' + field.esFullNestedPath;\n        }\n      }\n      if (!field.esSearchName) {\n        field.esSearchName = field.esName;\n        if (field.hasOwnProperty('esSearchSubField')) {\n          if (field.esSearchSubField) {\n            field.esSearchName += '.' + field.esSearchSubField;\n          }\n        } else if (field.type === 'string' &&\n          model.esStringSubFields &&\n          model.esStringSubFields.search) {\n          field.esSearchName += '.' + model.esStringSubFields.search;\n        }\n        if (field.esNestedPath) {\n          field.esSearchName = field.esNestedPath + '.' + field.esSearchName;\n        }\n      }\n      if (!field.esFilterName) {\n        field.esFilterName = field.esName;\n        if (field.hasOwnProperty('esFilterSubField')) {\n          if (field.esFilterSubField) {\n            field.esFilterName += '.' + field.esFilterSubField;\n          }\n        } else if (field.type === 'string' &&\n          model.esStringSubFields &&\n          model.esStringSubFields.filter) {\n          field.esFilterName += '.' + model.esStringSubFields.filter;\n        }\n        if (field.esNestedPath) {\n          field.esFilterName = field.esNestedPath + '.' + field.esFilterName;\n        }\n      }\n      if (!field.esAggName) {\n        field.esAggName = field.esName;\n        if (field.hasOwnProperty('esAggSubField')) {\n          if (field.esAggSubField) {\n            field.esAggName += '.' + field.esAggSubField;\n          }\n        } else if (field.type === 'string' &&\n          model.esStringSubFields &&\n          model.esStringSubFields.agg) {\n          field.esAggName += '.' + model.esStringSubFields.agg;\n        }\n        if (field.esNestedPath) {\n          field.esAggName = field.esFullNestedPath + '.' + field.esAggName;\n        }\n      }\n    }\n  }\n}\n\n// Get a property key and transform it in a suitable key for kendo\n// the constraint is that kendo needs a key suitable for javascript object's dot notation\n// i.e a valid js identifier with alphanumeric chars + '_' and '$'\nfunction asKendoPropertyKey(value) {\n  return value.replace(/[^a-zA-z0-9_$]/g, '_');\n}\n\n// Get sets of nesting levels and matching groups of fields\nfunction _nestedFields(fields) {\n  const _result = {};\n  const _subTypes = {};\n  Object.keys(fields).forEach(fieldKey => {\n    const field = fields[fieldKey];\n    if (field.esNestedPath) {\n      _result[field.esNestedPath] = _result[field.esNestedPath] || [];\n      _result[field.esNestedPath].push(field.esName);\n    }\n    if (field.esParentType) {\n      _subTypes[field.esParentType] = _subTypes[field.esParentType] || [];\n      _subTypes[field.esParentType].push(field.esName);\n    }\n    if (field.esChildType) {\n      _subTypes[field.esChildType] = _subTypes[field.esChildType] || [];\n      _subTypes[field.esChildType].push(field.esName);\n    }\n  });\n\n  return [_result, _subTypes];\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/fields.js\n **/"],"sourceRoot":""}